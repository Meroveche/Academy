--------------------------------   HTML ---------------------------------------
<div class="panel panel-default">
  <div class="panel-heading">
    <h2 class="panel-title">
      Classes
    </h2>
  </div>
  <div class="panel-body">
    <ol class="breadcrumb">
      <li>
      	<a href="?id={{::portal.homepage_dv}}">Home</a>
      </li>
      <li aria-current="page" class="active">Classes</li>
    </ol>
    <div class="row">
      <div class="col-md-3">
        <form>
          <h3 class="h4">
            Search Filters
          </h3>
          <fieldset>
            <div class="form-group">
              <label for="class_number">Class Number</label>
              <input id="class_number" class="form-control" ng-model="filters.class_number">
            </div>
            <div class="form-group">
              <label for="location_code">Location</label>
              <select id="location_code" class="form-control" ng-model="filters.location_code">
                <option value="">All Locations</option>
                <option ng-repeat="code in data.location_codes" value="{{code.sys_id}}">{{code.name}}</option>
              </select>
            </div>
            <div class="form-group">
              <label for="state">Status</label>
              <select id="state" class="form-control" ng-model="filters.state">
                <option value="">All Statuses</option>
                <option value="1">Draft</option>
                <option value="3">Scheduled</option>
                <option value="4">In Progress</option>
                <option value="5">Completed</option>
                <option value="-1">Cancelled</option>
              </select>
            </div>
            <div class="form-group">
              <label for="mine">Show Classes</label>
              <select id="mine" class="form-control" ng-model="filters.mine">
                <option value="1">All Classes</option>
                <option value="2">My Classes</option>
              </select>
            </div>
            <footer>
            	<button type="submit" class="btn btn-primary" ng-click="filter('filter')">
                Search
              </button>
              <button type="button" class="btn btn-default" ng-click="filter('clear')">
                Clear Filters
              </button>
            </footer>
          </fieldset>
        </form>
      </div>
      <div class="col-md-9">
        <h3 class="h4">
          Search Results
        </h3>
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead>
            	<tr>
              	<th scope="col" aria-sort="{{sort['class_number'].sort}}">
                  <button type="button" class="btn btn-clear" aria-label="sort['class_number'].label}}" ng-click="sortData($event, 'class_number')">
                    Class Number <i class="fa fa-chevron-down" aria-hidden="true"></i>
                  </button>
                </th>
                <th scope="col" aria-sort="{{sort['location_code'].sort}}">
                  <button type="button" class="btn btn-clear" aria-label="sort['location_code'].label}}" ng-click="sortData($event, 'location_code')">
                    Location <i class="fa fa-chevron-down" aria-hidden="true"></i>
                  </button>
                </th>
                <th scope="col" aria-sort="{{sort['state'].sort}}">
                  <button type="button" class="btn btn-clear" aria-label="sort['state'].label}}" ng-click="sortData($event, 'state')">
                    Status <i class="fa fa-chevron-down" aria-hidden="true"></i>
                  </button>
                </th>
                <th scope="col" aria-sort="{{sort['start_date'].sort}}">
                  <button type="button" class="btn btn-clear" aria-label="sort['start_date'].label}}" ng-click="sortData($event, 'start_date')">
                    Class Start Date <i class="fa fa-chevron-down" aria-hidden="true"></i>
                  </button>
                </th>
                <th scope="col" aria-sort="{{sort['class_coordinator_user_id'].sort}}">
                  <button type="button" class="btn btn-clear" aria-label="sort['class_coordinator_user_id'].label}}" ng-click="sortData($event, 'class_coordinator_user_id')">
                    Class Coordinator <i class="fa fa-chevron-down" aria-hidden="true"></i>
                  </button>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr ng-if="!data.classes.length">
              	<td colspan="5">No classes meet the selected criteria</td>
              </tr>
            	<tr ng-repeat="row in data.classes">
              	<th scope="row">
                	<a href="?id=haisp_class_homepage&class_id={{row.sys_id}}">{{row.class_number || 'No Class Number'}}</a>
                </th>
                <td>{{row.location_code.label}}</td>
                <td>{{row.state}}</td>
                <td>{{row.start_date|date:'MM/dd/yyyy'}}</td>
                <td>{{row.class_coordinator_user_id.label}}</td>
              </tr>
            </tbody>
          </table>
        </div>
        <div class="table-footer">
          <uib-pagination total-items="data.totalCount" ng-model="data.page" ng-change="paginate()" items-per-page="data.batchSize" class="pagination-sm" boundary-link-numbers="true"></uib-pagination>
          <div ng-if="data.showCreateClass">
            <a class="btn btn-primary" href="?id=haisp_sc_cat_item&sys_id=a63ab6661b3b9a905c8ccbb6624bcbe4">Create New Class</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


----------------------------------- SERVER -------------------------------------------------------
(function($sp, data, options, input) {
	data.page = 1;
	data.batchSize = 25;
	data.filters = Object.assign(
		{
			class_number: "",
			location_code: "",
			state: "",
			mine: "1"
		},
		options.filters
	);

	if (input) {
		if (GeneralUtils.areEqual(input.action, "paginate")) {
			data.page = Math.max(input.page, 1);
		}

		if (GeneralUtils.areEqual(input.action, "filter")) {
			data.page = 1;
		}

		if (GeneralUtils.areEqual(input.action, "sort")) {
			data.page = 1;
		}

		data.filters = { ...data.filters, ...input.filters };
	}

	data.sort = GeneralUtils.defaultValue(input?.sort, { field: "start_date", asc: false });

	function getEncodedQuery(filters) {
		const filter = [];
		if (GeneralUtils.hasValue(filters.class_number)) {
			filter.push("class_numberLIKE" + filters.class_number);
		}

		if (GeneralUtils.hasValue(filters.location_code)) {
			filter.push("location_code=" + filters.location_code);
		}

		if (GeneralUtils.hasValue(filters.state)) {
			filter.push("state=" + filters.state);
		}

		if (filters.mine == "2") {
			filter.push(ClassUtils.getMyClassesRefQual(gs.getUserID()));
		}

		return filter.join("^");
	}

	const startIndex = (data.page - 1) * data.batchSize;
	const endIndex = data.page * data.batchSize;

	data.classes = [];
	const classGR = new GlideRecord(Constants.CLASS_TABLE);
	const filter = getEncodedQuery(data.filters);
	if (GeneralUtils.hasValue(filter)) {
		classGR.addEncodedQuery(filter);
	}
	if (data.sort.asc) {
		classGR.orderBy(data.sort.field);
	} else {
		classGR.orderByDesc(data.sort.field);
	}
	classGR.chooseWindow(startIndex, endIndex);
	classGR.query();

	data.totalCount = classGR.getRowCount();
	while (classGR.next()) {
		data.classes.push({
			...GlideRecordUtils.toJson(classGR, { full: true }),
			state: GlideRecordUtils.getDisplayValue(classGR, "state"),
		});
	}

	data.showCreateClass = true;

	data.location_codes = [];
	const locationGR = new GlideRecord(Constants.LOCATION_CODE_TABLE);
	locationGR.addQuery("is_active", true);
	locationGR.orderBy("name");
	locationGR.query();
	while (locationGR.next()) {
		data.location_codes.push(GlideRecordUtils.toJson(locationGR));
	}
	
})($sp, data, options, input);


---------------------------------  CLIENT --------------------------------------------------
api.controller = function($scope) {
  const c = this;
	
	function deepMerge(object) {
		return JSON.parse(JSON.stringify(object));
	}
	
	function getSortData() {
		$scope.sort = {
			class_number: (() => {
				if ($scope.data.sort.field !== "class_number") {
					return { sort: "none", label: "Sort by class number" };
				}
				
				if ($scope.data.sort.asc) {
					return { sort: "ascending", label: "Sort by class number, ascending" };
				} else {
					return { sort: "descending", label: "Sort by class number, descending" };
				}
			})(),
			location_code: (() => {
				if ($scope.data.sort.field !== "location_code") {
					return { sort: "none", label: "Sort by location" };
				}
				
				if ($scope.data.sort.asc) {
					return { sort: "ascending", label: "Sort by location, ascending" };
				} else {
					return { sort: "descending", label: "Sort by location, descending" };
				}
			})(),
			state: (() => {
				if ($scope.data.sort.field !== "state") {
					return { sort: "none", label: "Sort by status" };
				}
				
				if ($scope.data.sort.asc) {
					return { sort: "ascending", label: "Sort by status, ascending" };
				} else {
					return { sort: "descending", label: "Sort by status, descending" };
				}
			})(),
			start_date: (() => {
				if ($scope.data.sort.field !== "start_date") {
					return { sort: "none", label: "Sort by class start date" };
				}
				
				if ($scope.data.sort.asc) {
					return { sort: "ascending", label: "Sort by class start date, ascending" };
				} else {
					return { sort: "descending", label: "Sort by class start date, descending" };
				}
			})(),
			class_coordinator_user_id: (() => {
				if ($scope.data.sort.field !== "class_coordinator_user_id") {
					return { sort: "none", label: "Sort by class coordinator" };
				}
				
				if ($scope.data.sort.asc) {
					return { sort: "ascending", label: "Sort by class coordinator, ascending" };
				} else {
					return { sort: "descending", label: "Sort by class coordinator, descending" };
				}
			})(),
		};
	}
	
	getSortData();
	
	const defaultFilters = {
		class_number: "",
		location_code: "",
		state: "",
		mine: "1"
	};
	
	$scope.filters = { ...c.data.filters } || deepMerge(defaultFilters);
	
	$scope.paginate = function () {
		c.data.action = "paginate";
		c.server.update()
			.then(function (response) {
				delete c.data.action;
			});
	};
	
	$scope.filter = function (action) {
		c.data.action = "filter";
		if (action === "clear") {
			$scope.filters = deepMerge(defaultFilters);
		}
		
		c.data.filters = $scope.filters;
		c.server.update()
			.then(function (response) {
				delete c.data.action;
			});
	};
	
	$scope.sortData = function (event, field) {
		const header = event.target.closest("th");
		const order = header.getAttribute("aria-sort");
		$scope.data.sort = {
			field,
			asc: order === "ascending" ? false : true,
		}
		
		getSortData();
		c.data.action = "sort";
		c.data.sort = $scope.data.sort;
		c.server.update()
			.then(function (response) {
				delete c.data.sort;
				delete c.data.action;
			});
	};
};


------------------------------  CSS -------------------------------
[scope="row"] {
  font-weight: normal;
}

.breadcrumb {
  background-color: transparent;
  margin: -1.5rem 0 0.5rem;
  padding-inline: 0;
  
  .active {
    color: #1b1b1b;
  }
}

.btn-clear {
  font-weight: bold;
  padding: 0;
  text-align: left;
}

[aria-sort] .fa-chevron-down {
  display: none;
}

[aria-sort="ascending"] .fa-chevron-down,
[aria-sort="descending"] .fa-chevron-down {
  display: inline-block;
}

[aria-sort="ascending"] .fa-chevron-down {
  transform: rotate(180deg);
}

.pagination {
  margin: 0;
}

.table-footer {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
}
